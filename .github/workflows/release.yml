name: build and release

on:
  push:
    branches:
      - develop
      - main

jobs:
  build:
    name: Build FE
    runs-on: ubuntu-latest

    steps:
      - name: get branch
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: checkout code
        uses: actions/checkout@v2

      - name: npm install
        run: npm install

      - name: Build FE
        run: npm run build

      - name: Package build artifacts
        run: tar -czvf frontend.tar.gz .next package.json

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: frontend.tar.gz
          path: frontend.tar.gz

  release:
    name: Create new github release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v2.x
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: frontend.tar.gz
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.GITHUB_REF_SLUG }}-${{ env.GITHUB_SHA_SHORT }}
          release_name: Release from ${{ env.GITHUB_REF_SLUG }}-${{ env.GITHUB_SHA_SHORT }}
          body: |
            Automatic release from ${{ env.GITHUB_REF_SLUG }}-${{ env.GITHUB_SHA_SHORT }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./frontend.tar.gz
          asset_name: frontend.tar.gz
          asset_content_type: application/tar+gzip
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Generate changelog
        uses: BobAnkh/auto-generate-changelog@master
        with:
          REPO_NAME: 'julou95/war-room'
          ACCESS_TOKEN: ${{secrets.GITHUB_TOKEN}}
          PATH: 'CHANGELOG-${{ env.GITHUB_REF_SLUG }}.md'
          COMMIT_MESSAGE: 'docs(CHANGELOG): update release notes'
          TYPE: 'feat:Feature,fix:Bug Fixes,docs:Documentation,refactor:Refactor,perf:Performance Improvements'